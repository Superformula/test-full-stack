type Mutation {
    createUser(body: UserRequest!): User!
    updateUser(id: ID!, body: UserRequest!): User!
    deleteUser(id: ID!): User!
}

type Query {
    user(id: ID!): User
    users(name: String, after: String): UserConnection!
}

type Subscription {
    userChanged: User
    @aws_subscribe(mutations: ["createUser", "updateUser"])

    userDeleted: User
    @aws_subscribe(mutations: ["deleteUser"])
}

input UserRequest {
    name: String!
    dob: AWSDate
    address: String!
    lat: Float
    lng: Float
    description: String
}

type User {
    id: ID!
    avatar: String!
    name: String!
    dob: AWSDate
    address: String!
    lat: Float
    lng: Float
    description: String
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type UserConnection {
    list: [User!]!
    nextToken: String
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

scalar AWSDateTime
scalar AWSDate