type Mutation {
    createUser(input: UserInput!): User!
    updateUser(id: ID!, input: UserInput!): User!
    deleteUser(id: ID!): User!
}

type Query {
    searchUsers(name: String, limit: Int, skip: Int): UserSearchResult
    getUserById(id: ID!): User
    getAddresses(input: String!): [AddressSuggestion!]!
    getCoordinates(placeId: String!): Coordinates!

    #TODO: Remove this once I plug elastic search in. I will use this just for debugging purposes
    getAllUsers: GetAllUsersResult
}


type Subscription {
    onCreateUser: User
    @aws_subscribe(mutations: ["createUser"])

    onUpdateUser: User
    @aws_subscribe(mutations: ["updateUser"])

    onDeleteUser: User
    @aws_subscribe(mutations: ["deleteUser"])
}

type GetAllUsersResult {
    items: [User!]!
    nextToken: String
}

type User {
    id: ID!
    name: String!
    dob: AWSDate!
    address: String!
    latitude: Float!
    longitude: Float!
    description: String!
    avatar: String!
    createdAt: AWSTimestamp!
    updatedAt: AWSTimestamp!
}

type AddressSuggestion {
    placeId: String!
    description: String!
}

type UserSearchResult {
    hasMore: Boolean!
    items: [User!]!
}

type Coordinates {
    latitude: Float!
    longitude: Float!
}

input CoordinatesInput {
    latitude: Float!
    longitude: Float!
}

input UserInput {
    name: String!
    dob: AWSDate!
    address: String!
    location: CoordinatesInput!
    description: String!
}